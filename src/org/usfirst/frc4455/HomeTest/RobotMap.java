// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4455.HomeTest;

import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.BuiltInAccelerometer;
import edu.wpi.first.wpilibj.DoubleSolenoid;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static DoubleSolenoid activeactiveSqueeze;
    public static DoubleSolenoid activeactiveLift;
    public static DoubleSolenoid passivepassiveCylinder;
    public static AnalogGyro navigationgyro;
    public static BuiltInAccelerometer navigationaccelRIO;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        activeactiveSqueeze = new DoubleSolenoid(0, 2, 3);
        LiveWindow.addActuator("Active", "activeSqueeze", activeactiveSqueeze);
        
        activeactiveLift = new DoubleSolenoid(0, 4, 5);
        LiveWindow.addActuator("Active", "activeLift", activeactiveLift);
        
        passivepassiveCylinder = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("Passive", "passiveCylinder", passivepassiveCylinder);
        
        navigationgyro = new AnalogGyro(0);
        LiveWindow.addSensor("Navigation", "gyro", navigationgyro);
        navigationgyro.setSensitivity(0.007);
        navigationaccelRIO = new BuiltInAccelerometer();
        LiveWindow.addSensor("Navigation", "accelRIO", navigationaccelRIO);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
